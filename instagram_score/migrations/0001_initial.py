# Generated by Django 3.2.6 on 2021-08-24 18:49

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brandattribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_brandattribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Brandattributetype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_type_name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_brandattributetype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categorybridge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category_id', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_categorybridge',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Commenttype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField()),
                ('division_code', models.IntegerField()),
                ('is_audience', models.BooleanField()),
                ('name', models.CharField(max_length=50)),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_commenttype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommenttypeCategorys',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_commenttype_categorys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Filtercategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter_name', models.CharField(max_length=100)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'instagram_score_filtercategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FiltercategoryCategorys',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_filtercategory_categorys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Followertype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField()),
                ('division_code', models.IntegerField()),
                ('is_audience', models.BooleanField()),
                ('name', models.CharField(max_length=50)),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_followertype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FollowertypeCategorys',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_followertype_categorys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Influencersection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.IntegerField(unique=True)),
                ('min_follower', models.IntegerField()),
                ('max_follower', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_influencersection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Influencersectionsummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_count', models.IntegerField()),
                ('report_count', models.IntegerField()),
                ('avg_follower_count', models.FloatField()),
                ('avg_following_count', models.FloatField()),
                ('avg_post_count', models.FloatField()),
                ('created_at', models.DateTimeField()),
                ('avg_post_comment', models.FloatField()),
                ('avg_post_likes', models.FloatField()),
                ('avg_likercommenter_rate', models.FloatField()),
                ('avg_likercommenterfollower_rate', models.FloatField()),
                ('avg_post_real_comment', models.FloatField()),
                ('avg_post_real_likes', models.FloatField()),
            ],
            options={
                'db_table': 'instagram_score_influencersectionsummary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Listupcomponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_listupcomponent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Listupinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, max_length=8, null=True, unique=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_listupinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ListupinfoReports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_listupinfo_reports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Outputmetriclog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('input_users_length', models.IntegerField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('complete_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_outputmetriclog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Postcampaigntype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField()),
                ('division_code', models.IntegerField()),
                ('is_audience', models.BooleanField()),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'instagram_score_postcampaigntype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostcampaigntypeCategorys',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_postcampaigntype_categorys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Posttype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField()),
                ('division_code', models.IntegerField()),
                ('is_audience', models.BooleanField()),
                ('name', models.CharField(max_length=50)),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_posttype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PosttypeCategorys',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_posttype_categorys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportbrandcalsnap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usertags_count', models.IntegerField()),
                ('usertags_increases', models.FloatField()),
                ('cal_like', models.IntegerField()),
                ('likes_increses', models.FloatField()),
                ('follower_count', models.IntegerField()),
                ('follower_increase', models.FloatField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'instagram_score_reportbrandcalsnap',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportbrandv1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('tag_count', models.IntegerField()),
                ('account_count', models.IntegerField()),
                ('upload_count', models.TextField()),
                ('mention_brand', models.TextField()),
                ('mention_hashtag', models.TextField()),
                ('keyword', models.TextField()),
                ('top_image', models.TextField()),
                ('ages', models.TextField(blank=True, null=True)),
                ('genders', models.TextField(blank=True, null=True)),
                ('profile_image', models.CharField(blank=True, max_length=500, null=True)),
                ('is_tpo_cal', models.BooleanField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('analy_at', models.DateTimeField(blank=True, null=True)),
                ('crawled_at', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportbrandv1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportbrandv1Looks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_reportbrandv1_looks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportcalculationrate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_reportcalculationrate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportcomponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_profile', models.BooleanField()),
                ('is_profile_perfect', models.BooleanField()),
                ('is_follower', models.BooleanField()),
                ('is_follower_perfect', models.BooleanField()),
                ('is_post', models.BooleanField()),
                ('is_post_perfect', models.BooleanField()),
                ('is_post_comment_perfect', models.BooleanField()),
                ('is_post_like_perfect', models.BooleanField()),
                ('user_id', models.BigIntegerField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=50, null=True)),
                ('is_post_comment', models.BooleanField()),
                ('is_post_like', models.BooleanField()),
                ('is_analy', models.BooleanField()),
            ],
            options={
                'db_table': 'instagram_score_reportcomponent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportdefine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_name', models.CharField(max_length=100)),
                ('version', models.IntegerField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'instagram_score_reportdefine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportelementdefine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_type', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('key_name', models.CharField(max_length=100)),
                ('version', models.IntegerField()),
                ('element_order', models.IntegerField()),
                ('is_enable', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('element_make_function', models.CharField(blank=True, max_length=100, null=True)),
                ('element_function', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportelementdefine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportgroupdefine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('version', models.IntegerField()),
                ('key_name', models.CharField(max_length=100)),
                ('order', models.IntegerField()),
                ('is_enable', models.BooleanField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'instagram_score_reportgroupdefine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportsectiondefine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('version', models.IntegerField()),
                ('key_name', models.CharField(max_length=100)),
                ('order', models.IntegerField()),
                ('is_enable', models.BooleanField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'instagram_score_reportsectiondefine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportsectionsummarydistribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField()),
                ('percentile', models.FloatField()),
                ('real_rate', models.FloatField()),
                ('fake_rate', models.FloatField()),
                ('real_engagement_rate', models.FloatField()),
                ('fake_engagement_rate', models.FloatField()),
                ('audience_male_rate', models.FloatField()),
                ('audience_female_rate', models.FloatField()),
                ('main_score', models.FloatField()),
                ('audience_age', models.FloatField()),
                ('created_at', models.DateTimeField()),
                ('total_reach', models.FloatField()),
                ('engagement_rate', models.FloatField()),
                ('type_benchmark', models.IntegerField()),
                ('growth_score', models.FloatField()),
            ],
            options={
                'db_table': 'instagram_score_reportsectionsummarydistribution',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportsummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_count', models.IntegerField()),
                ('profile_info_count', models.IntegerField()),
                ('influencer_count', models.IntegerField()),
                ('report_count', models.IntegerField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'instagram_score_reportsummary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('analy_at', models.DateTimeField(blank=True, null=True)),
                ('crawled_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Audience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking_rate', models.FloatField(blank=True, null=True)),
                ('all_audience_count', models.IntegerField(blank=True, null=True)),
                ('better_than_similar_rate', models.FloatField(blank=True, null=True)),
                ('fake_audience_count', models.IntegerField(blank=True, null=True)),
                ('fake_audience_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('real_audience_count', models.IntegerField(blank=True, null=True)),
                ('real_audience_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('is_complete', models.BooleanField()),
                ('version', models.IntegerField()),
                ('fake_audience_advertise_rate', models.FloatField(blank=True, null=True)),
                ('fake_audience_bot_rate', models.FloatField(blank=True, null=True)),
                ('fake_audience_notactive_rate', models.FloatField(blank=True, null=True)),
                ('fake_audience_notreach_rate', models.FloatField(blank=True, null=True)),
                ('audience_business_rate', models.FloatField(blank=True, null=True)),
                ('audience_aggressive_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1audience',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Audiencefollowertypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1audiencefollowertypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Audiencepersonalindicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('avg_follower_count', models.FloatField(blank=True, null=True)),
                ('avg_following_count', models.FloatField(blank=True, null=True)),
                ('avg_media_count', models.FloatField(blank=True, null=True)),
                ('avg_comment_count', models.FloatField(blank=True, null=True)),
                ('avg_like_count', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1audiencepersonalindicator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Audiencetendency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv1audiencetendency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Audiencetendencycategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1audiencetendencycategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Demographics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('man_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('woman_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('all_age_ratetext', models.CharField(blank=True, max_length=30, null=True)),
                ('man_age_ratetext', models.CharField(blank=True, max_length=30, null=True)),
                ('woman_age_ratetext', models.CharField(blank=True, max_length=30, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('is_complete', models.BooleanField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv1demographics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Demographicslangauge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(blank=True, max_length=20, null=True)),
                ('language_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('language_count', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('is_complete', models.BooleanField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv1demographicslangauge',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Engagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequent_commenter_count', models.IntegerField(blank=True, null=True)),
                ('engagement_rate', models.FloatField(blank=True, null=True)),
                ('better_than_similar_rate', models.FloatField(blank=True, null=True)),
                ('avg_post_comment', models.FloatField(blank=True, null=True)),
                ('avg_post_likes', models.FloatField(blank=True, null=True)),
                ('ranking_rate', models.FloatField(blank=True, null=True)),
                ('real_engagement_rate', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('is_complete', models.BooleanField()),
                ('version', models.IntegerField()),
                ('fake_comment_count', models.IntegerField(blank=True, null=True)),
                ('fake_like_count', models.IntegerField(blank=True, null=True)),
                ('likercommenter_count', models.IntegerField(blank=True, null=True)),
                ('likercommenterfollower_count', models.IntegerField(blank=True, null=True)),
                ('real_comment_count', models.IntegerField(blank=True, null=True)),
                ('real_like_count', models.IntegerField(blank=True, null=True)),
                ('likercommenter_rate', models.FloatField(blank=True, null=True)),
                ('likercommenterfollower_rate', models.FloatField(blank=True, null=True)),
                ('avg_post_real_comment', models.FloatField(blank=True, null=True)),
                ('avg_post_real_likes', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1engagement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Engagementcommenttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1engagementcommenttypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Engagementdemographics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('likecomment_man_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('likecomment_woman_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('like_man_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('like_woman_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('comment_man_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('comment_woman_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('likecomment_age_ratetext', models.CharField(blank=True, max_length=30, null=True)),
                ('like_age_ratetext', models.CharField(blank=True, max_length=30, null=True)),
                ('comment_age_ratetext', models.CharField(blank=True, max_length=30, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('is_complete', models.BooleanField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv1engagementdemographics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Engagementfollowerkeyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(blank=True, max_length=50, null=True)),
                ('keyword_post_count', models.IntegerField(blank=True, null=True)),
                ('engagement_rate', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('is_complete', models.BooleanField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv1engagementfollowerkeyword',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Engagementpostcategorys',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('engagement_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1engagementpostcategorys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Engagementtrends',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('post_insta_pk', models.BigIntegerField(blank=True, null=True)),
                ('engagement_rate', models.FloatField(blank=True, null=True)),
                ('real_engagement_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1engagementtrends',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Growth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('growth_score', models.FloatField(blank=True, null=True)),
                ('week_follower_up_rate', models.FloatField(blank=True, null=True)),
                ('ranking_rate', models.FloatField(blank=True, null=True)),
                ('better_than_similar_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1growth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recent_posting_rate', models.FloatField(blank=True, null=True)),
                ('top_post_palette_color', models.CharField(blank=True, max_length=100, null=True)),
                ('post_palette_color', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('is_complete', models.BooleanField()),
                ('version', models.IntegerField()),
                ('day_posting_count', models.CharField(blank=True, max_length=100, null=True)),
                ('time_posting_count', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1post',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Postcampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('avg_campaign_likes', models.IntegerField(blank=True, null=True)),
                ('avg_campaign_comment', models.IntegerField(blank=True, null=True)),
                ('campaign_estimated_price', models.FloatField(blank=True, null=True)),
                ('campaign_sales_estimated_price', models.FloatField(blank=True, null=True)),
                ('brand_communication_aggressive', models.FloatField(blank=True, null=True)),
                ('audience_communication_aggressive', models.FloatField(blank=True, null=True)),
                ('recent_posting_campaign_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1postcampaign',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Postcampaignengagements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('engagement_rate', models.FloatField(blank=True, null=True)),
                ('image_url', models.CharField(blank=True, max_length=500, null=True)),
                ('post_insta_pk', models.BigIntegerField(blank=True, null=True)),
                ('caption', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1postcampaignengagements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Postcampaigntypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('campaign_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1postcampaigntypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Postengagementtrends',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('post_insta_pk', models.BigIntegerField(blank=True, null=True)),
                ('real_like_count', models.IntegerField(blank=True, null=True)),
                ('fake_like_count', models.IntegerField(blank=True, null=True)),
                ('real_comment_count', models.IntegerField(blank=True, null=True)),
                ('fake_comment_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1postengagementtrends',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Postengagementtypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('category_name', models.CharField(blank=True, max_length=50, null=True)),
                ('engagement_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1postengagementtypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Postfavoritekeyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(blank=True, max_length=50, null=True)),
                ('keyword_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('is_complete', models.BooleanField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv1postfavoritekeyword',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Postfrequent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('frequent_commenter_count', models.IntegerField(blank=True, null=True)),
                ('frequent_like_count', models.IntegerField(blank=True, null=True)),
                ('post_insta_pk', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1postfrequent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Postmentionbrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mention', models.CharField(blank=True, max_length=50, null=True)),
                ('post_like_count', models.IntegerField(blank=True, null=True)),
                ('post_comment_count', models.IntegerField(blank=True, null=True)),
                ('engagement_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('profile_image', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('is_complete', models.BooleanField()),
                ('version', models.IntegerField()),
                ('type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1postmentionbrand',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Posttop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('top_post_count', models.IntegerField(blank=True, null=True)),
                ('top_post_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1posttop',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Posttophashtags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('media_count', models.IntegerField(blank=True, null=True)),
                ('post_count', models.IntegerField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1posttophashtags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Posttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('posttype_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1posttypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Reach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_reach', models.IntegerField(blank=True, null=True)),
                ('follower_reach', models.IntegerField(blank=True, null=True)),
                ('non_follower_reach', models.IntegerField(blank=True, null=True)),
                ('follower_post_count', models.IntegerField(blank=True, null=True)),
                ('follower_following_count', models.IntegerField(blank=True, null=True)),
                ('ranking_rate', models.FloatField(blank=True, null=True)),
                ('total_reach_engagement', models.IntegerField(blank=True, null=True)),
                ('better_than_similar_rate', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('is_complete', models.BooleanField()),
                ('version', models.IntegerField()),
                ('follower_reach_engagement', models.IntegerField(blank=True, null=True)),
                ('nonfollower_reach_engagement', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1reach',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv1Similar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('similar_user', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_reportv1similar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('crawled_at', models.DateTimeField(blank=True, null=True)),
                ('analy_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Audiencedemographics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2audiencedemographics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Audiencefanpower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2audiencefanpower',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Campaignengagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2campaignengagement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Campaignestimated',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2campaignestimated',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Campaignhighengagementtype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2campaignhighengagementtype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Campaignpositiveness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2campaignpositiveness',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Campaigntype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2campaigntype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Commenttype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2commenttype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Engagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2engagement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Followerlanguages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2followerlanguages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Followerlikekeyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2followerlikekeyword',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Followertype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2followertype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Growthcommenttrend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2growthcommenttrend',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Growthengagementtrend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2growthengagementtrend',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Growthfollowertrend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2growthfollowertrend',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Growthliketrend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2growthliketrend',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Growthrealengagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2growthrealengagement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Mainaudiencequalityscore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2mainaudiencequalityscore',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Mainlevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2mainlevel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Mainreachprediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2mainreachprediction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Mainrealengagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2mainrealengagement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Postcolor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2postcolor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Postmainkeyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2postmainkeyword',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Postmetionbrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2postmetionbrand',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Posttendency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2posttendency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reportv2Posttype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_reportv2posttype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Scorev1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('analy_list_count', models.IntegerField()),
                ('analy_profile_follower_count', models.IntegerField()),
                ('real_follower_count', models.IntegerField()),
                ('real_liker_count', models.IntegerField()),
                ('profile_analy_follower_rate', models.FloatField(blank=True, null=True)),
                ('better_than_similar_rate', models.FloatField(blank=True, null=True)),
                ('profile_analy_like_rate', models.FloatField(blank=True, null=True)),
                ('ranking_rate', models.FloatField(blank=True, null=True)),
                ('recent_posts_liker_count', models.IntegerField()),
                ('account_value', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_scorev1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Scorev1Snapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('analy_list_count', models.IntegerField()),
                ('analy_profile_follower_count', models.IntegerField()),
                ('real_follower_count', models.IntegerField()),
                ('recent_posts_liker_count', models.IntegerField()),
                ('real_liker_count', models.IntegerField()),
                ('profile_analy_follower_rate', models.FloatField(blank=True, null=True)),
                ('profile_analy_like_rate', models.FloatField(blank=True, null=True)),
                ('ranking_rate', models.FloatField(blank=True, null=True)),
                ('better_than_similar_rate', models.FloatField(blank=True, null=True)),
                ('account_value', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_scorev1snapshot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('is_public', models.BooleanField()),
                ('division_code', models.IntegerField()),
                ('is_audience', models.BooleanField()),
            ],
            options={
                'db_table': 'instagram_score_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Taginfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('profile_pic_url', models.CharField(blank=True, max_length=500, null=True)),
                ('media_count', models.IntegerField(blank=True, null=True)),
                ('crawled_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_taginfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Taginfosummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_taginfosummary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaginfosummaryAudienceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_taginfosummary_audience_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaginfosummaryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_taginfosummary_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaginfosummaryCategoryAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_taginfosummary_category_admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaginfosummaryTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_taginfosummary_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagreportcomponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('is_tag_mediacount', models.BooleanField()),
                ('is_tag_related', models.BooleanField()),
                ('is_tag_explore', models.BooleanField()),
            ],
            options={
                'db_table': 'instagram_score_tagreportcomponent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagreportv1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('crawled_at', models.DateTimeField(blank=True, null=True)),
                ('analy_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'instagram_score_tagreportv1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagreportv1Audience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('real_audience_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('fake_audience_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('ranking_rate', models.FloatField(blank=True, null=True)),
                ('better_than_similar_rate', models.FloatField(blank=True, null=True)),
                ('fake_audience_advertise_rate', models.FloatField(blank=True, null=True)),
                ('fake_audience_bot_rate', models.FloatField(blank=True, null=True)),
                ('fake_audience_notactive_rate', models.FloatField(blank=True, null=True)),
                ('fake_audience_notreach_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_tagreportv1audience',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagreportv1Audiencetendency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('following_purpose', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_tagreportv1audiencetendency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagreportv1Audiencetendencycategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_tagreportv1audiencetendencycategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagreportv1Demographics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('man_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('woman_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('all_age_ratetext', models.CharField(blank=True, max_length=30, null=True)),
                ('man_age_ratetext', models.CharField(blank=True, max_length=30, null=True)),
                ('woman_age_ratetext', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'instagram_score_tagreportv1demographics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagreportv1Engagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('avg_engagement_rate', models.FloatField(blank=True, null=True)),
                ('avg_real_engagement_rate', models.FloatField(blank=True, null=True)),
                ('avg_post_likes', models.FloatField(blank=True, null=True)),
                ('avg_post_comment', models.FloatField(blank=True, null=True)),
                ('ranking_rate', models.FloatField(blank=True, null=True)),
                ('better_than_similar_rate', models.FloatField(blank=True, null=True)),
                ('avg_real_like_count', models.IntegerField(blank=True, null=True)),
                ('avg_fake_like_count', models.IntegerField(blank=True, null=True)),
                ('avg_real_comment_count', models.IntegerField(blank=True, null=True)),
                ('avg_fake_comment_count', models.IntegerField(blank=True, null=True)),
                ('recent_like_rate', models.FloatField(blank=True, null=True)),
                ('recent_like_rate_day', models.FloatField(blank=True, null=True)),
                ('recent_like_rate_hour', models.FloatField(blank=True, null=True)),
                ('recent_like_rate_minute', models.FloatField(blank=True, null=True)),
                ('recent_like_rate_week', models.FloatField(blank=True, null=True)),
                ('recent_comment_rate', models.FloatField(blank=True, null=True)),
                ('recent_comment_rate_day', models.FloatField(blank=True, null=True)),
                ('recent_comment_rate_hour', models.FloatField(blank=True, null=True)),
                ('recent_comment_rate_minute', models.FloatField(blank=True, null=True)),
                ('recent_comment_rate_week', models.FloatField(blank=True, null=True)),
                ('recent_rate', models.FloatField(blank=True, null=True)),
                ('recent_rate_day', models.FloatField(blank=True, null=True)),
                ('recent_rate_hour', models.FloatField(blank=True, null=True)),
                ('recent_rate_minute', models.FloatField(blank=True, null=True)),
                ('recent_rate_week', models.FloatField(blank=True, null=True)),
                ('avg_top_engagement_rate', models.FloatField(blank=True, null=True)),
                ('avg_top_post_comment', models.FloatField(blank=True, null=True)),
                ('avg_top_post_likes', models.FloatField(blank=True, null=True)),
                ('avg_top_real_engagement_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_tagreportv1engagement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagreportv1Engagementdemographics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('avg_likecomment_man_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('avg_likecomment_woman_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('avg_like_man_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('avg_like_woman_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('avg_comment_man_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('avg_comment_woman_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('avg_likecomment_age_ratetext', models.CharField(blank=True, max_length=30, null=True)),
                ('avg_like_age_ratetext', models.CharField(blank=True, max_length=30, null=True)),
                ('avg_comment_age_ratetext', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'instagram_score_tagreportv1engagementdemographics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagreportv1Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('recent_posting_rate', models.FloatField(blank=True, null=True)),
                ('day_posting_count', models.CharField(blank=True, max_length=100, null=True)),
                ('time_posting_count', models.CharField(blank=True, max_length=100, null=True)),
                ('top_post_palette_color', models.CharField(blank=True, max_length=100, null=True)),
                ('post_palette_color', models.CharField(blank=True, max_length=100, null=True)),
                ('recent_posting_rate_week', models.FloatField(blank=True, null=True)),
                ('recent_posting_rate_day', models.FloatField(blank=True, null=True)),
                ('recent_posting_rate_hour', models.FloatField(blank=True, null=True)),
                ('recent_posting_rate_minute', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_tagreportv1post',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagreportv1Postcampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('recent_posting_campaign_rate', models.FloatField(blank=True, null=True)),
                ('avg_campaign_likes', models.IntegerField(blank=True, null=True)),
                ('avg_campaign_comment', models.IntegerField(blank=True, null=True)),
                ('campaign_estimated_price', models.FloatField(blank=True, null=True)),
                ('campaign_sales_estimated_price', models.FloatField(blank=True, null=True)),
                ('avg_campaign_estimated_price', models.FloatField(blank=True, null=True)),
                ('avg_campaign_sales_estimated_price', models.FloatField(blank=True, null=True)),
                ('brand_communication_aggressive', models.FloatField(blank=True, null=True)),
                ('audience_communication_aggressive', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_tagreportv1postcampaign',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagreportv1Postcampaigntypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('campaign_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_tagreportv1postcampaigntypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagreportv1Postengagementtypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('category_name', models.CharField(blank=True, max_length=50, null=True)),
                ('engagement_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_tagreportv1postengagementtypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagreportv1Posttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('posttype_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_tagreportv1posttypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagreportv1Reach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('post_total_reach', models.IntegerField(blank=True, null=True)),
                ('post_total_reach_engagement', models.IntegerField(blank=True, null=True)),
                ('ranking_rate', models.FloatField(blank=True, null=True)),
                ('better_than_similar_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_tagreportv1reach',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagscorev1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('ranking_rate', models.FloatField(blank=True, null=True)),
                ('better_than_similar_rate', models.FloatField(blank=True, null=True)),
                ('engagement_score', models.FloatField(blank=True, null=True)),
                ('trend_score', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_tagscorev1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagtype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=50)),
                ('is_public', models.BooleanField()),
                ('division_code', models.IntegerField()),
                ('is_audience', models.BooleanField()),
            ],
            options={
                'db_table': 'instagram_score_tagtype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Useragedivision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_name', models.CharField(max_length=50)),
                ('is_public', models.BooleanField()),
                ('division_code', models.IntegerField()),
                ('is_audience', models.BooleanField()),
            ],
            options={
                'db_table': 'instagram_score_useragedivision',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usercountrydivision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=50)),
                ('city_name', models.CharField(max_length=50)),
                ('is_public', models.BooleanField()),
                ('division_code', models.IntegerField()),
                ('is_audience', models.BooleanField()),
            ],
            options={
                'db_table': 'instagram_score_usercountrydivision',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usergenderdivision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField()),
                ('division_code', models.IntegerField()),
                ('is_audience', models.BooleanField()),
                ('gender_name', models.CharField(max_length=50)),
                ('gender_code', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_usergenderdivision',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=50, null=True)),
                ('full_name', models.CharField(blank=True, max_length=50, null=True)),
                ('biography', models.TextField(blank=True, null=True)),
                ('profile_pic_url', models.CharField(blank=True, max_length=500, null=True)),
                ('media_count', models.IntegerField(blank=True, null=True)),
                ('following_count', models.IntegerField(blank=True, null=True)),
                ('follower_count', models.IntegerField(blank=True, null=True)),
                ('public_phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('public_email', models.CharField(blank=True, max_length=200, null=True)),
                ('user_id', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('crawled_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('public_url', models.CharField(blank=True, max_length=500, null=True)),
                ('usertags_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_score_userinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userinfosummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_userinfosummary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserinfosummaryAudienceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_userinfosummary_audience_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserinfosummaryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_userinfosummary_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserinfosummaryCategoryAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_userinfosummary_category_admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserinfosummaryTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'instagram_score_userinfosummary_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userlanguagedivision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(max_length=10)),
                ('language_name', models.CharField(max_length=50)),
                ('is_public', models.BooleanField()),
                ('division_code', models.IntegerField()),
                ('is_audience', models.BooleanField()),
            ],
            options={
                'db_table': 'instagram_score_userlanguagedivision',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YoutubeScoreRelationcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=255)),
                ('like_count', models.FloatField()),
                ('dislike_count', models.FloatField()),
                ('view_count', models.FloatField()),
                ('update_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'youtube_score_relationcategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YoutubeScoreYoutubeage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'youtube_score_youtubeage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YoutubeScoreYoutubecaladvsnap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nor_upload_count', models.IntegerField()),
                ('nor_upload_rate', models.FloatField()),
                ('adv_upload_count', models.IntegerField()),
                ('adv_upload_rate', models.FloatField()),
                ('nor_avg_view', models.FloatField()),
                ('nor_avg_view_rate', models.FloatField()),
                ('adv_avg_view', models.FloatField()),
                ('adv_avg_view_rate', models.FloatField()),
                ('nor_dislike_count', models.FloatField()),
                ('nor_dislike_rate', models.FloatField()),
                ('adv_dislike_count', models.FloatField()),
                ('adv_dislike_rate', models.FloatField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'youtube_score_youtubecaladvsnap',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YoutubeScoreYoutubecalsnap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_subscriber_count', models.IntegerField()),
                ('current_subscriber_rate', models.FloatField()),
                ('current_view_count', models.IntegerField()),
                ('current_view_rate', models.FloatField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('standard_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'youtube_score_youtubecalsnap',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YoutubeScoreYoutubecategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_location', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('channel_category_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'youtube_score_youtubecategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YoutubeScoreYoutubecategoryrelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_type', models.IntegerField()),
            ],
            options={
                'db_table': 'youtube_score_youtubecategoryrelation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YoutubeScoreYoutubecategorysetavg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_count', models.IntegerField()),
                ('comment_avg', models.FloatField()),
                ('like_avg', models.FloatField()),
                ('dislike_avg', models.FloatField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'youtube_score_youtubecategorysetavg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YoutubeScoreYoutubechannelinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_id', models.CharField(max_length=255, unique=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('viewcount', models.BigIntegerField(blank=True, db_column='viewCount', null=True)),
                ('commentcount', models.BigIntegerField(blank=True, db_column='commentCount', null=True)),
                ('subscribercount', models.BigIntegerField(blank=True, db_column='subscriberCount', null=True)),
                ('hiddensubscribercount', models.BooleanField(blank=True, db_column='hiddenSubscriberCount', null=True)),
                ('videocount', models.BigIntegerField(blank=True, db_column='videoCount', null=True)),
                ('updated_at', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
                ('lastest_upload_at', models.DateTimeField(blank=True, null=True)),
                ('upload_frequency', models.IntegerField()),
                ('profile_url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'youtube_score_youtubechannelinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YoutubeScoreYoutubegender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('male', models.IntegerField()),
                ('female', models.IntegerField()),
            ],
            options={
                'db_table': 'youtube_score_youtubegender',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YoutubeScoreYoutubereportv1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField()),
                ('updated_at', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
                ('content_category', models.TextField(blank=True, null=True)),
                ('hidden_tags', models.TextField(blank=True, null=True)),
                ('gender', models.TextField()),
                ('age', models.TextField()),
                ('language', models.TextField()),
                ('participation', models.TextField()),
                ('keyword', models.TextField()),
                ('adv_type', models.TextField()),
                ('adv_category', models.TextField(blank=True, null=True)),
                ('adv_content_detail', models.TextField(blank=True, null=True)),
                ('adv_comment', models.IntegerField()),
                ('adv_like', models.IntegerField()),
                ('adv_view', models.IntegerField()),
                ('nor_comment', models.IntegerField()),
                ('nor_like', models.IntegerField()),
                ('nor_view', models.IntegerField()),
                ('comment_avg', models.FloatField()),
                ('dislike_avg', models.FloatField()),
                ('like_avg', models.FloatField()),
                ('adv_count', models.IntegerField()),
                ('nor_adv_count', models.IntegerField()),
                ('better_than_similar_rate', models.FloatField(blank=True, null=True)),
                ('estimate_view', models.FloatField(blank=True, null=True)),
                ('main_score', models.FloatField(blank=True, null=True)),
                ('ranking_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'youtube_score_youtubereportv1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YoutubeScoreYoutubereportv2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField()),
                ('updated_at', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
                ('channel_id', models.CharField(max_length=255, unique=True)),
                ('main_score', models.FloatField(blank=True, null=True)),
                ('estimate_view', models.FloatField(blank=True, null=True)),
                ('ranking_rate', models.FloatField(blank=True, null=True)),
                ('better_than_similar_rate', models.FloatField(blank=True, null=True)),
                ('content_category', models.TextField(blank=True, null=True)),
                ('language', models.TextField()),
                ('keyword', models.TextField()),
                ('video_title_tag', models.TextField()),
                ('adv_category', models.TextField(blank=True, null=True)),
                ('adv_content_detail', models.TextField(blank=True, null=True)),
                ('nor_view', models.IntegerField()),
                ('adv_view', models.IntegerField()),
                ('nor_like', models.IntegerField()),
                ('adv_like', models.IntegerField()),
                ('nor_dislike', models.IntegerField()),
                ('adv_dislike', models.IntegerField()),
                ('adv_like_dislike_count', models.IntegerField()),
                ('adv_upload_rate', models.FloatField()),
                ('adv_video_count', models.IntegerField()),
                ('adv_view_video_count', models.IntegerField()),
                ('nor_adv_like_dislike_count', models.IntegerField()),
                ('nor_adv_upload_rate', models.FloatField()),
                ('nor_adv_video_count', models.IntegerField()),
                ('nor_adv_view_video_count', models.IntegerField()),
                ('adv_video', models.TextField(blank=True, null=True)),
                ('adv_comment', models.IntegerField()),
                ('adv_comment_count', models.IntegerField()),
                ('nor_adv_comment_count', models.IntegerField()),
                ('nor_comment', models.IntegerField()),
            ],
            options={
                'db_table': 'youtube_score_youtubereportv2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YoutubeScoreYoutubereportv2HiddenTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'youtube_score_youtubereportv2_hidden_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YoutubeScoreYoutubetag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'youtube_score_youtubetag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='YoutubeScoreYoutubetagrelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'youtube_score_youtubetagrelation',
                'managed': False,
            },
        ),
    ]
