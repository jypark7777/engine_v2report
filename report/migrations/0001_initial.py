# Generated by Django 3.2.6 on 2021-08-25 17:09

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('component', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApiURL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_path', models.CharField(max_length=500)),
                ('is_permission', models.BooleanField(blank=True, default=False, verbose_name='퍼미션 확인 유무')),
                ('is_request_limit_enable', models.BooleanField(blank=True, default=False, verbose_name='요청 쿼리 제한 유무')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('is_enable', models.BooleanField(blank=True, default=False, verbose_name='사용 유무')),
            ],
        ),
        migrations.CreateModel(
            name='AudienceQuality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking', models.BigIntegerField(verbose_name='디비 순위')),
                ('ranking_rate', models.FloatField(verbose_name='디비 순위 백분위 (상위)')),
                ('estimate_ranking', models.BigIntegerField(verbose_name='추정 순위 (전체 풀)')),
                ('estimate_ranking_rate', models.FloatField(verbose_name='추정 순위 백분위(전체 풀)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='수정 시간')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='어드민 수정 시간')),
                ('is_force_modify', models.BooleanField(blank=True, default=True, verbose_name='어드민 수정값 고정')),
                ('json_parameter', models.JSONField(null=True, verbose_name='계산식 관련 원형 데이터')),
                ('version', models.IntegerField(blank=True, choices=[(0, '도달수 기반 계산'), (1, '기존 피처링 엔진'), (2, '수집된 데이터 기반')], default=0)),
                ('version_calculate', models.IntegerField(blank=True, default=0, verbose_name='적용된 계산식 버전')),
                ('accuracy', models.IntegerField(blank=True, choices=[(0, '매우낮음'), (1, '낮음'), (2, '중간'), (3, '높음'), (4, '매우 높음')], default=0, verbose_name='정확도')),
                ('type', models.IntegerField(blank=True, choices=[(0, 'bool'), (1, 'int'), (2, 'float'), (3, 'char')], default=0)),
                ('value_boolean', models.BooleanField(blank=True, null=True)),
                ('value_boolean_admin', models.BooleanField(blank=True, null=True)),
                ('value_int', models.BigIntegerField(blank=True, null=True)),
                ('value_int_admin', models.BigIntegerField(blank=True, null=True)),
                ('value_float', models.FloatField(blank=True, null=True)),
                ('value_float_admin', models.FloatField(blank=True, null=True)),
                ('value_char', models.CharField(blank=True, max_length=1000, null=True)),
                ('value_char_admin', models.FloatField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategorySection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='CountrySection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code', models.CharField(max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='Engagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking', models.BigIntegerField(verbose_name='디비 순위')),
                ('ranking_rate', models.FloatField(verbose_name='디비 순위 백분위 (상위)')),
                ('estimate_ranking', models.BigIntegerField(verbose_name='추정 순위 (전체 풀)')),
                ('estimate_ranking_rate', models.FloatField(verbose_name='추정 순위 백분위(전체 풀)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='수정 시간')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='어드민 수정 시간')),
                ('is_force_modify', models.BooleanField(blank=True, default=True, verbose_name='어드민 수정값 고정')),
                ('json_parameter', models.JSONField(null=True, verbose_name='계산식 관련 원형 데이터')),
                ('version', models.IntegerField(blank=True, choices=[(0, '도달수 기반 계산'), (1, '기존 피처링 엔진'), (2, '수집된 데이터 기반')], default=0)),
                ('version_calculate', models.IntegerField(blank=True, default=0, verbose_name='적용된 계산식 버전')),
                ('accuracy', models.IntegerField(blank=True, choices=[(0, '매우낮음'), (1, '낮음'), (2, '중간'), (3, '높음'), (4, '매우 높음')], default=0, verbose_name='정확도')),
                ('type', models.IntegerField(blank=True, choices=[(0, 'bool'), (1, 'int'), (2, 'float'), (3, 'char')], default=0)),
                ('value_boolean', models.BooleanField(blank=True, null=True)),
                ('value_boolean_admin', models.BooleanField(blank=True, null=True)),
                ('value_int', models.BigIntegerField(blank=True, null=True)),
                ('value_int_admin', models.BigIntegerField(blank=True, null=True)),
                ('value_float', models.FloatField(blank=True, null=True)),
                ('value_float_admin', models.FloatField(blank=True, null=True)),
                ('value_char', models.CharField(blank=True, max_length=1000, null=True)),
                ('value_char_admin', models.FloatField(blank=True, max_length=1000, null=True)),
                ('like_engagement_rate', models.FloatField(blank=True, null=True)),
                ('comment_engagement_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FollowerSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_follower', models.IntegerField(blank=True, null=True, verbose_name='이상 값')),
                ('max_follower', models.IntegerField(blank=True, null=True, verbose_name='미만 값')),
            ],
        ),
        migrations.CreateModel(
            name='IGUserInfo',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='수정 시간')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='어드민 수정 시간')),
                ('is_force_modify', models.BooleanField(blank=True, default=True, verbose_name='어드민 수정값 고정')),
                ('id', models.BigIntegerField(primary_key=True, serialize=False, verbose_name='Insta PK')),
                ('username', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='인스타 유저 네임')),
                ('crawled_at', models.DateTimeField(blank=True, null=True, verbose_name='수집 시간')),
                ('modifier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='iguserinfo', to=settings.AUTH_USER_MODEL, verbose_name='유저')),
                ('section_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.categorysection')),
                ('section_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.countrysection')),
                ('section_follower', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.followersection')),
                ('tags', models.ManyToManyField(blank=True, to='component.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationAPIKey',
            fields=[
                ('id', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False, unique=True)),
                ('prefix', models.CharField(editable=False, max_length=8, unique=True)),
                ('hashed_key', models.CharField(editable=False, max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('name', models.CharField(default=None, help_text='A free-form name for the API key. Need not be unique. 50 characters max.', max_length=50)),
                ('revoked', models.BooleanField(blank=True, default=False, help_text='If the API key is revoked, clients cannot use it anymore. (This cannot be undone.)')),
                ('expiry_date', models.DateTimeField(blank=True, help_text='Once API key expires, clients cannot use it anymore.', null=True, verbose_name='Expires')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to='report.organization')),
            ],
            options={
                'verbose_name': 'Organization API key',
                'verbose_name_plural': 'Organization API keys',
                'ordering': ('-created',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlatformSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, '인스타그램'), (1, '유튜브'), (2, '틱톡')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ReachScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking', models.BigIntegerField(verbose_name='디비 순위')),
                ('ranking_rate', models.FloatField(verbose_name='디비 순위 백분위 (상위)')),
                ('estimate_ranking', models.BigIntegerField(verbose_name='추정 순위 (전체 풀)')),
                ('estimate_ranking_rate', models.FloatField(verbose_name='추정 순위 백분위(전체 풀)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='수정 시간')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='어드민 수정 시간')),
                ('is_force_modify', models.BooleanField(blank=True, default=True, verbose_name='어드민 수정값 고정')),
                ('json_parameter', models.JSONField(null=True, verbose_name='계산식 관련 원형 데이터')),
                ('version', models.IntegerField(blank=True, choices=[(0, '도달수 기반 계산'), (1, '기존 피처링 엔진'), (2, '수집된 데이터 기반')], default=0)),
                ('version_calculate', models.IntegerField(blank=True, default=0, verbose_name='적용된 계산식 버전')),
                ('accuracy', models.IntegerField(blank=True, choices=[(0, '매우낮음'), (1, '낮음'), (2, '중간'), (3, '높음'), (4, '매우 높음')], default=0, verbose_name='정확도')),
                ('type', models.IntegerField(blank=True, choices=[(0, 'bool'), (1, 'int'), (2, 'float'), (3, 'char')], default=0)),
                ('value_boolean', models.BooleanField(blank=True, null=True)),
                ('value_boolean_admin', models.BooleanField(blank=True, null=True)),
                ('value_int', models.BigIntegerField(blank=True, null=True)),
                ('value_int_admin', models.BigIntegerField(blank=True, null=True)),
                ('value_float', models.FloatField(blank=True, null=True)),
                ('value_float_admin', models.FloatField(blank=True, null=True)),
                ('value_char', models.CharField(blank=True, max_length=1000, null=True)),
                ('value_char_admin', models.FloatField(blank=True, max_length=1000, null=True)),
                ('ig_userinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reachscore', to='report.iguserinfo')),
                ('modifier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='reachscore', to=settings.AUTH_USER_MODEL, verbose_name='유저')),
                ('tags', models.ManyToManyField(blank=True, to='component.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SectionShortcut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='report.categorysection')),
                ('section_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='report.countrysection')),
                ('section_follower', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='report.followersection')),
                ('section_platform', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='report.platformsection')),
            ],
        ),
        migrations.CreateModel(
            name='YTChannelInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='수정 시간')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='어드민 수정 시간')),
                ('is_force_modify', models.BooleanField(blank=True, default=True, verbose_name='어드민 수정값 고정')),
                ('crawled_at', models.DateTimeField(blank=True, null=True, verbose_name='수집 시간')),
                ('modifier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ytchannelinfo', to=settings.AUTH_USER_MODEL, verbose_name='유저')),
                ('section_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.categorysection')),
                ('section_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.countrysection')),
                ('section_follower', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.followersection')),
                ('tags', models.ManyToManyField(blank=True, to='component.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TKUserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='수정 시간')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='어드민 수정 시간')),
                ('is_force_modify', models.BooleanField(blank=True, default=True, verbose_name='어드민 수정값 고정')),
                ('crawled_at', models.DateTimeField(blank=True, null=True, verbose_name='수집 시간')),
                ('modifier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tkuserinfo', to=settings.AUTH_USER_MODEL, verbose_name='유저')),
                ('section_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.categorysection')),
                ('section_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.countrysection')),
                ('section_follower', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.followersection')),
                ('tags', models.ManyToManyField(blank=True, to='component.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RequestAPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='생성 시간')),
                ('request_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('request_path', models.CharField(blank=True, max_length=500, null=True)),
                ('parameter', models.CharField(blank=True, max_length=1000, null=True)),
                ('callback_url', models.URLField(blank=True, max_length=500, null=True)),
                ('is_callback', models.BooleanField(blank=True, default=False, verbose_name='콜백 유무')),
                ('is_complete', models.BooleanField(blank=True, default=False, verbose_name='완료 유무')),
                ('request_at', models.DateTimeField(auto_now_add=True, verbose_name='요청 시간')),
                ('complete_at', models.DateTimeField(blank=True, null=True, verbose_name='완료 시간')),
                ('cached_key', models.CharField(blank=True, max_length=500, null=True)),
                ('ipaddress', models.CharField(blank=True, max_length=50, null=True, verbose_name='아이피')),
                ('api_url', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.apiurl')),
                ('organization_key', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.organizationapikey')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, verbose_name='기준 날짜')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='갱신일')),
                ('shortcut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report.sectionshortcut')),
            ],
            options={
                'unique_together': {('shortcut', 'date')},
            },
        ),
        migrations.CreateModel(
            name='RealInfluenceScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking', models.BigIntegerField(verbose_name='디비 순위')),
                ('ranking_rate', models.FloatField(verbose_name='디비 순위 백분위 (상위)')),
                ('estimate_ranking', models.BigIntegerField(verbose_name='추정 순위 (전체 풀)')),
                ('estimate_ranking_rate', models.FloatField(verbose_name='추정 순위 백분위(전체 풀)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='수정 시간')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='어드민 수정 시간')),
                ('is_force_modify', models.BooleanField(blank=True, default=True, verbose_name='어드민 수정값 고정')),
                ('json_parameter', models.JSONField(null=True, verbose_name='계산식 관련 원형 데이터')),
                ('version', models.IntegerField(blank=True, choices=[(0, '도달수 기반 계산'), (1, '기존 피처링 엔진'), (2, '수집된 데이터 기반')], default=0)),
                ('version_calculate', models.IntegerField(blank=True, default=0, verbose_name='적용된 계산식 버전')),
                ('accuracy', models.IntegerField(blank=True, choices=[(0, '매우낮음'), (1, '낮음'), (2, '중간'), (3, '높음'), (4, '매우 높음')], default=0, verbose_name='정확도')),
                ('type', models.IntegerField(blank=True, choices=[(0, 'bool'), (1, 'int'), (2, 'float'), (3, 'char')], default=0)),
                ('value_boolean', models.BooleanField(blank=True, null=True)),
                ('value_boolean_admin', models.BooleanField(blank=True, null=True)),
                ('value_int', models.BigIntegerField(blank=True, null=True)),
                ('value_int_admin', models.BigIntegerField(blank=True, null=True)),
                ('value_float', models.FloatField(blank=True, null=True)),
                ('value_float_admin', models.FloatField(blank=True, null=True)),
                ('value_char', models.CharField(blank=True, max_length=1000, null=True)),
                ('value_char_admin', models.FloatField(blank=True, max_length=1000, null=True)),
                ('ig_userinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='realinfluencescore', to='report.iguserinfo')),
                ('modifier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='realinfluencescore', to=settings.AUTH_USER_MODEL, verbose_name='유저')),
                ('reach', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='report.reachscore', verbose_name='[계산지표] 도달')),
                ('tags', models.ManyToManyField(blank=True, to='component.Tag')),
                ('tk_userinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='realinfluencescore', to='report.tkuserinfo')),
                ('yt_channelinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='realinfluencescore', to='report.ytchannelinfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='reachscore',
            name='tk_userinfo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reachscore', to='report.tkuserinfo'),
        ),
        migrations.AddField(
            model_name='reachscore',
            name='yt_channelinfo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reachscore', to='report.ytchannelinfo'),
        ),
        migrations.CreateModel(
            name='OrganizationAPIStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_all_limit_count', models.IntegerField(blank=True, default=100000)),
                ('request_day_limit_count', models.IntegerField(blank=True, default=1000)),
                ('request_month_limit_count', models.IntegerField(blank=True, default=10000)),
                ('request_count', models.IntegerField(blank=True, default=0)),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='업뎃 시간')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('last_organization_key', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.organizationapikey')),
                ('organization', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='status', to='report.organization')),
            ],
        ),
        migrations.CreateModel(
            name='FeaturingScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking', models.BigIntegerField(verbose_name='디비 순위')),
                ('ranking_rate', models.FloatField(verbose_name='디비 순위 백분위 (상위)')),
                ('estimate_ranking', models.BigIntegerField(verbose_name='추정 순위 (전체 풀)')),
                ('estimate_ranking_rate', models.FloatField(verbose_name='추정 순위 백분위(전체 풀)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='수정 시간')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='어드민 수정 시간')),
                ('is_force_modify', models.BooleanField(blank=True, default=True, verbose_name='어드민 수정값 고정')),
                ('json_parameter', models.JSONField(null=True, verbose_name='계산식 관련 원형 데이터')),
                ('version', models.IntegerField(blank=True, choices=[(0, '도달수 기반 계산'), (1, '기존 피처링 엔진'), (2, '수집된 데이터 기반')], default=0)),
                ('version_calculate', models.IntegerField(blank=True, default=0, verbose_name='적용된 계산식 버전')),
                ('accuracy', models.IntegerField(blank=True, choices=[(0, '매우낮음'), (1, '낮음'), (2, '중간'), (3, '높음'), (4, '매우 높음')], default=0, verbose_name='정확도')),
                ('type', models.IntegerField(blank=True, choices=[(0, 'bool'), (1, 'int'), (2, 'float'), (3, 'char')], default=0)),
                ('value_boolean', models.BooleanField(blank=True, null=True)),
                ('value_boolean_admin', models.BooleanField(blank=True, null=True)),
                ('value_int', models.BigIntegerField(blank=True, null=True)),
                ('value_int_admin', models.BigIntegerField(blank=True, null=True)),
                ('value_float', models.FloatField(blank=True, null=True)),
                ('value_float_admin', models.FloatField(blank=True, null=True)),
                ('value_char', models.CharField(blank=True, max_length=1000, null=True)),
                ('value_char_admin', models.FloatField(blank=True, max_length=1000, null=True)),
                ('audience_quality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='report.audiencequality', verbose_name='[계산지표] 도달')),
                ('engagement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='report.engagement', verbose_name='[계산지표] 도달')),
                ('ig_userinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='featuringscore', to='report.iguserinfo')),
                ('modifier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='featuringscore', to=settings.AUTH_USER_MODEL, verbose_name='유저')),
                ('reach', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='report.reachscore', verbose_name='[계산지표] 도달')),
                ('real_influence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='report.realinfluencescore', verbose_name='[계산지표] 도달')),
                ('tags', models.ManyToManyField(blank=True, to='component.Tag')),
                ('tk_userinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='featuringscore', to='report.tkuserinfo')),
                ('yt_channelinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='featuringscore', to='report.ytchannelinfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='engagement',
            name='ig_userinfo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='engagement', to='report.iguserinfo'),
        ),
        migrations.AddField(
            model_name='engagement',
            name='modifier',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='engagement', to=settings.AUTH_USER_MODEL, verbose_name='유저'),
        ),
        migrations.AddField(
            model_name='engagement',
            name='reach',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='report.reachscore', verbose_name='[계산지표] 반응률'),
        ),
        migrations.AddField(
            model_name='engagement',
            name='tags',
            field=models.ManyToManyField(blank=True, to='component.Tag'),
        ),
        migrations.AddField(
            model_name='engagement',
            name='tk_userinfo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='engagement', to='report.tkuserinfo'),
        ),
        migrations.AddField(
            model_name='engagement',
            name='yt_channelinfo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='engagement', to='report.ytchannelinfo'),
        ),
        migrations.CreateModel(
            name='DemographicsGender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking', models.BigIntegerField(verbose_name='디비 순위')),
                ('ranking_rate', models.FloatField(verbose_name='디비 순위 백분위 (상위)')),
                ('estimate_ranking', models.BigIntegerField(verbose_name='추정 순위 (전체 풀)')),
                ('estimate_ranking_rate', models.FloatField(verbose_name='추정 순위 백분위(전체 풀)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='수정 시간')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='어드민 수정 시간')),
                ('is_force_modify', models.BooleanField(blank=True, default=True, verbose_name='어드민 수정값 고정')),
                ('json_parameter', models.JSONField(null=True, verbose_name='계산식 관련 원형 데이터')),
                ('version', models.IntegerField(blank=True, choices=[(0, '도달수 기반 계산'), (1, '기존 피처링 엔진'), (2, '수집된 데이터 기반')], default=0)),
                ('version_calculate', models.IntegerField(blank=True, default=0, verbose_name='적용된 계산식 버전')),
                ('accuracy', models.IntegerField(blank=True, choices=[(0, '매우낮음'), (1, '낮음'), (2, '중간'), (3, '높음'), (4, '매우 높음')], default=0, verbose_name='정확도')),
                ('type', models.IntegerField(blank=True, choices=[(0, 'bool'), (1, 'int'), (2, 'float'), (3, 'char')], default=0)),
                ('value_boolean', models.BooleanField(blank=True, null=True)),
                ('value_boolean_admin', models.BooleanField(blank=True, null=True)),
                ('value_int', models.BigIntegerField(blank=True, null=True)),
                ('value_int_admin', models.BigIntegerField(blank=True, null=True)),
                ('value_float', models.FloatField(blank=True, null=True)),
                ('value_float_admin', models.FloatField(blank=True, null=True)),
                ('value_char', models.CharField(blank=True, max_length=1000, null=True)),
                ('value_char_admin', models.FloatField(blank=True, max_length=1000, null=True)),
                ('ig_userinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demographicsgender', to='report.iguserinfo')),
                ('modifier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='demographicsgender', to=settings.AUTH_USER_MODEL, verbose_name='유저')),
                ('tags', models.ManyToManyField(blank=True, to='component.Tag')),
                ('tk_userinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demographicsgender', to='report.tkuserinfo')),
                ('yt_channelinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demographicsgender', to='report.ytchannelinfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DemographicsAge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking', models.BigIntegerField(verbose_name='디비 순위')),
                ('ranking_rate', models.FloatField(verbose_name='디비 순위 백분위 (상위)')),
                ('estimate_ranking', models.BigIntegerField(verbose_name='추정 순위 (전체 풀)')),
                ('estimate_ranking_rate', models.FloatField(verbose_name='추정 순위 백분위(전체 풀)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='수정 시간')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='어드민 수정 시간')),
                ('is_force_modify', models.BooleanField(blank=True, default=True, verbose_name='어드민 수정값 고정')),
                ('json_parameter', models.JSONField(null=True, verbose_name='계산식 관련 원형 데이터')),
                ('version', models.IntegerField(blank=True, choices=[(0, '도달수 기반 계산'), (1, '기존 피처링 엔진'), (2, '수집된 데이터 기반')], default=0)),
                ('version_calculate', models.IntegerField(blank=True, default=0, verbose_name='적용된 계산식 버전')),
                ('accuracy', models.IntegerField(blank=True, choices=[(0, '매우낮음'), (1, '낮음'), (2, '중간'), (3, '높음'), (4, '매우 높음')], default=0, verbose_name='정확도')),
                ('type', models.IntegerField(blank=True, choices=[(0, 'bool'), (1, 'int'), (2, 'float'), (3, 'char')], default=0)),
                ('value_boolean', models.BooleanField(blank=True, null=True)),
                ('value_boolean_admin', models.BooleanField(blank=True, null=True)),
                ('value_int', models.BigIntegerField(blank=True, null=True)),
                ('value_int_admin', models.BigIntegerField(blank=True, null=True)),
                ('value_float', models.FloatField(blank=True, null=True)),
                ('value_float_admin', models.FloatField(blank=True, null=True)),
                ('value_char', models.CharField(blank=True, max_length=1000, null=True)),
                ('value_char_admin', models.FloatField(blank=True, max_length=1000, null=True)),
                ('all_age_rate', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=5, verbose_name='나이 비율 (10대,20대..50대이상 퍼센테이지 콤마로 구분)')),
                ('man_age_rate', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=5, verbose_name='남자 나이 비율 (10대,20대..50대이상 퍼센테이지 콤마로 구분)')),
                ('woman_age_rate', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=5, verbose_name='여자 나이 비율 (10대,20대..50대이상 퍼센테이지 콤마로 구분)')),
                ('ig_userinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demographicsage', to='report.iguserinfo')),
                ('modifier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='demographicsage', to=settings.AUTH_USER_MODEL, verbose_name='유저')),
                ('tags', models.ManyToManyField(blank=True, to='component.Tag')),
                ('tk_userinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demographicsage', to='report.tkuserinfo')),
                ('yt_channelinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demographicsage', to='report.ytchannelinfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='audiencequality',
            name='ig_userinfo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audiencequality', to='report.iguserinfo'),
        ),
        migrations.AddField(
            model_name='audiencequality',
            name='modifier',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='audiencequality', to=settings.AUTH_USER_MODEL, verbose_name='유저'),
        ),
        migrations.AddField(
            model_name='audiencequality',
            name='reach',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='report.reachscore', verbose_name='[계산지표] 도달'),
        ),
        migrations.AddField(
            model_name='audiencequality',
            name='tags',
            field=models.ManyToManyField(blank=True, to='component.Tag'),
        ),
        migrations.AddField(
            model_name='audiencequality',
            name='tk_userinfo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audiencequality', to='report.tkuserinfo'),
        ),
        migrations.AddField(
            model_name='audiencequality',
            name='yt_channelinfo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audiencequality', to='report.ytchannelinfo'),
        ),
        migrations.CreateModel(
            name='AudienceIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking', models.BigIntegerField(verbose_name='디비 순위')),
                ('ranking_rate', models.FloatField(verbose_name='디비 순위 백분위 (상위)')),
                ('estimate_ranking', models.BigIntegerField(verbose_name='추정 순위 (전체 풀)')),
                ('estimate_ranking_rate', models.FloatField(verbose_name='추정 순위 백분위(전체 풀)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='수정 시간')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='어드민 수정 시간')),
                ('is_force_modify', models.BooleanField(blank=True, default=True, verbose_name='어드민 수정값 고정')),
                ('json_parameter', models.JSONField(null=True, verbose_name='계산식 관련 원형 데이터')),
                ('version', models.IntegerField(blank=True, choices=[(0, '도달수 기반 계산'), (1, '기존 피처링 엔진'), (2, '수집된 데이터 기반')], default=0)),
                ('version_calculate', models.IntegerField(blank=True, default=0, verbose_name='적용된 계산식 버전')),
                ('accuracy', models.IntegerField(blank=True, choices=[(0, '매우낮음'), (1, '낮음'), (2, '중간'), (3, '높음'), (4, '매우 높음')], default=0, verbose_name='정확도')),
                ('type', models.IntegerField(blank=True, choices=[(0, 'bool'), (1, 'int'), (2, 'float'), (3, 'char')], default=0)),
                ('value_boolean', models.BooleanField(blank=True, null=True)),
                ('value_boolean_admin', models.BooleanField(blank=True, null=True)),
                ('value_int', models.BigIntegerField(blank=True, null=True)),
                ('value_int_admin', models.BigIntegerField(blank=True, null=True)),
                ('value_float', models.FloatField(blank=True, null=True)),
                ('value_float_admin', models.FloatField(blank=True, null=True)),
                ('value_char', models.CharField(blank=True, max_length=1000, null=True)),
                ('value_char_admin', models.FloatField(blank=True, max_length=1000, null=True)),
                ('ig_userinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audienceindicator', to='report.iguserinfo')),
                ('modifier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='audienceindicator', to=settings.AUTH_USER_MODEL, verbose_name='유저')),
                ('tags', models.ManyToManyField(blank=True, to='component.Tag')),
                ('tk_userinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audienceindicator', to='report.tkuserinfo')),
                ('yt_channelinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audienceindicator', to='report.ytchannelinfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TermRankingAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking', models.BigIntegerField(verbose_name='디비 순위')),
                ('ranking_rate', models.FloatField(verbose_name='디비 순위 백분위 (상위)')),
                ('estimate_ranking', models.BigIntegerField(verbose_name='추정 순위 (전체 풀)')),
                ('estimate_ranking_rate', models.FloatField(verbose_name='추정 순위 백분위(전체 풀)')),
                ('define_date', models.DateField(verbose_name='기준날짜 (매주 월요일)')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='수정 시간')),
                ('ig_userinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='term_ranking', to='report.iguserinfo')),
                ('section_shortcut', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='report.sectionshortcut')),
                ('tk_userinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='term_ranking', to='report.tkuserinfo')),
                ('yt_channelinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='term_ranking', to='report.ytchannelinfo')),
            ],
            options={
                'unique_together': {('ig_userinfo', 'tk_userinfo', 'yt_channelinfo', 'define_date', 'section_shortcut')},
            },
        ),
        migrations.CreateModel(
            name='ReportStatisticsAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='속성명')),
                ('value', models.IntegerField(default=0, verbose_name='속성값')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='갱신일')),
                ('statistics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='report.reportstatistics')),
            ],
            options={
                'unique_together': {('statistics', 'name')},
            },
        ),
    ]
